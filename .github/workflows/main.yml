name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get current date
        id: get-date
        run: echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Extract version name from build.gradle
        id: extract-version
        run: |
          VERSION_NAME=$(grep -oP "versionName\s*=\s*'\K[0-9.]*'" app/build.gradle | tr -d "'")
          echo "Extracted VERSION_NAME: $VERSION_NAME"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Build with Gradle
        run: |
          ./gradlew assembleRelease
          if [ $? -ne 0 ]; then
            echo "Gradle build failed"
            exit 1
          fi

      - name: List build outputs
        run: ls -la app/build/outputs/

      - name: List APK files in release directory
        if: steps.list-build-outputs.outputs.release_dir == 'true'
        run: ls -la app/build/outputs/apk/release/

      - name: Rename APK
        if: steps.list-build-outputs.outputs.release_dir == 'true'
        run: |
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
          NEW_APK_NAME="DT_${CURRENT_DATE}_${VERSION_NAME}.apk"
          if [ -f "$APK_PATH" ]; then
            mv "$APK_PATH" "app/build/outputs/apk/release/$NEW_APK_NAME"
          else
            echo "APK file not found at $APK_PATH"
            exit 1
          fi

      - name: Upload APK
        if: steps.list-build-outputs.outputs.release_dir == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/DT_${CURRENT_DATE}_${VERSION_NAME}.apk
